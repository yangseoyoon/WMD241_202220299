* *::after *::before {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-size: 1.125rem;
  line-height: 150%;
}

.section {
  padding-block: 1.5rem;
}
.section > h2 {
  max-width: 60rem;
  margin-inline: auto;
  margin-block: 0;
  padding-inline: 1.5rem;
  margin-bottom: 0.75rem;
}
.container {
  max-width: 60rem;
  margin-inline: auto;
  padding: 1.5rem;
  padding-block: 0;
  background-color: oklch(0.95 0.01 240);
}

.grid {
  display: grid;

  &__item {
    &--nth {
      @for $i from 1 through 12 {
        &-#{$i} {
          background-color: oklch(0.9 0.05 $i * 30);
        }
      }
    }
  }

  &--opt-1 {
    grid-template-columns: 1fr 1fr 1fr;
    //grid-template-rows: 1fr 1fr 1fr 1fr;//
    /*fr=비례*/
    grid-auto-rows: 1fr; //auto는 내가 한 줄이 잇엇고 다음줄로 넘어갈 때 새로운 것을 만들때 이전줄과 동일한값으로..만약 칼럼이3줄이면 row자동으로 3줄 다 1fr//
    grid-template-rows: 4fr; //내가 지정한(1줄)만을 나머지 1fr대비 4fr사이즈로 만들어줌//
    column-gap: 0.75rem;
    row-gap: 1.5rem;
  }

  &--opt-2 {
    //grid-template-columns: repeat(3, 1fr);//
    //grid-template-columns: 200px repeat(2, 1fr); //
    //grid-template-columns: repeat(3,minmax(100px, 200px)); -> 부모찢음 ㅋ //minmax(최소값,최대값) repeat(n, minmax()) =minmax를 n번 반복//
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    grid-auto-rows: 1fr;
    column-gap: 0.75rem;
    row-gap: 1.5rem;
  }
}

//안하는게 좋은 습괌 :height 지정X->차라리 max height를 지정 (width의 경우도 같긔) //
